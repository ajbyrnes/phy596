// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fit_finalStage (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        resultStream_dout,
        resultStream_num_data_valid,
        resultStream_fifo_cap,
        resultStream_empty_n,
        resultStream_read,
        x2_dout,
        x2_num_data_valid,
        x2_fifo_cap,
        x2_empty_n,
        x2_read,
        y2_dout,
        y2_num_data_valid,
        y2_fifo_cap,
        y2_empty_n,
        y2_read,
        sigmaSquaredDiv1_dout,
        sigmaSquaredDiv1_num_data_valid,
        sigmaSquaredDiv1_fifo_cap,
        sigmaSquaredDiv1_empty_n,
        sigmaSquaredDiv1_read,
        last3_dout,
        last3_num_data_valid,
        last3_fifo_cap,
        last3_empty_n,
        last3_read,
        output_r_TDATA,
        output_r_TVALID,
        output_r_TREADY
);

parameter    ap_ST_fsm_state1 = 87'd1;
parameter    ap_ST_fsm_state2 = 87'd2;
parameter    ap_ST_fsm_state3 = 87'd4;
parameter    ap_ST_fsm_state4 = 87'd8;
parameter    ap_ST_fsm_state5 = 87'd16;
parameter    ap_ST_fsm_state6 = 87'd32;
parameter    ap_ST_fsm_state7 = 87'd64;
parameter    ap_ST_fsm_state8 = 87'd128;
parameter    ap_ST_fsm_state9 = 87'd256;
parameter    ap_ST_fsm_state10 = 87'd512;
parameter    ap_ST_fsm_state11 = 87'd1024;
parameter    ap_ST_fsm_state12 = 87'd2048;
parameter    ap_ST_fsm_state13 = 87'd4096;
parameter    ap_ST_fsm_state14 = 87'd8192;
parameter    ap_ST_fsm_state15 = 87'd16384;
parameter    ap_ST_fsm_state16 = 87'd32768;
parameter    ap_ST_fsm_state17 = 87'd65536;
parameter    ap_ST_fsm_state18 = 87'd131072;
parameter    ap_ST_fsm_state19 = 87'd262144;
parameter    ap_ST_fsm_state20 = 87'd524288;
parameter    ap_ST_fsm_state21 = 87'd1048576;
parameter    ap_ST_fsm_state22 = 87'd2097152;
parameter    ap_ST_fsm_state23 = 87'd4194304;
parameter    ap_ST_fsm_state24 = 87'd8388608;
parameter    ap_ST_fsm_state25 = 87'd16777216;
parameter    ap_ST_fsm_state26 = 87'd33554432;
parameter    ap_ST_fsm_state27 = 87'd67108864;
parameter    ap_ST_fsm_state28 = 87'd134217728;
parameter    ap_ST_fsm_state29 = 87'd268435456;
parameter    ap_ST_fsm_state30 = 87'd536870912;
parameter    ap_ST_fsm_state31 = 87'd1073741824;
parameter    ap_ST_fsm_state32 = 87'd2147483648;
parameter    ap_ST_fsm_state33 = 87'd4294967296;
parameter    ap_ST_fsm_state34 = 87'd8589934592;
parameter    ap_ST_fsm_state35 = 87'd17179869184;
parameter    ap_ST_fsm_state36 = 87'd34359738368;
parameter    ap_ST_fsm_state37 = 87'd68719476736;
parameter    ap_ST_fsm_state38 = 87'd137438953472;
parameter    ap_ST_fsm_state39 = 87'd274877906944;
parameter    ap_ST_fsm_state40 = 87'd549755813888;
parameter    ap_ST_fsm_state41 = 87'd1099511627776;
parameter    ap_ST_fsm_state42 = 87'd2199023255552;
parameter    ap_ST_fsm_state43 = 87'd4398046511104;
parameter    ap_ST_fsm_state44 = 87'd8796093022208;
parameter    ap_ST_fsm_state45 = 87'd17592186044416;
parameter    ap_ST_fsm_state46 = 87'd35184372088832;
parameter    ap_ST_fsm_state47 = 87'd70368744177664;
parameter    ap_ST_fsm_state48 = 87'd140737488355328;
parameter    ap_ST_fsm_state49 = 87'd281474976710656;
parameter    ap_ST_fsm_state50 = 87'd562949953421312;
parameter    ap_ST_fsm_state51 = 87'd1125899906842624;
parameter    ap_ST_fsm_state52 = 87'd2251799813685248;
parameter    ap_ST_fsm_state53 = 87'd4503599627370496;
parameter    ap_ST_fsm_state54 = 87'd9007199254740992;
parameter    ap_ST_fsm_state55 = 87'd18014398509481984;
parameter    ap_ST_fsm_state56 = 87'd36028797018963968;
parameter    ap_ST_fsm_state57 = 87'd72057594037927936;
parameter    ap_ST_fsm_state58 = 87'd144115188075855872;
parameter    ap_ST_fsm_state59 = 87'd288230376151711744;
parameter    ap_ST_fsm_state60 = 87'd576460752303423488;
parameter    ap_ST_fsm_state61 = 87'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 87'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 87'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 87'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 87'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 87'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 87'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 87'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 87'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 87'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 87'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 87'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 87'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 87'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 87'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 87'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 87'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 87'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 87'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 87'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 87'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 87'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 87'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 87'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 87'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 87'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 87'd77371252455336267181195264;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [331:0] resultStream_dout;
input  [4:0] resultStream_num_data_valid;
input  [4:0] resultStream_fifo_cap;
input   resultStream_empty_n;
output   resultStream_read;
input  [11:0] x2_dout;
input  [4:0] x2_num_data_valid;
input  [4:0] x2_fifo_cap;
input   x2_empty_n;
output   x2_read;
input  [11:0] y2_dout;
input  [4:0] y2_num_data_valid;
input  [4:0] y2_fifo_cap;
input   y2_empty_n;
output   y2_read;
input  [63:0] sigmaSquaredDiv1_dout;
input  [4:0] sigmaSquaredDiv1_num_data_valid;
input  [4:0] sigmaSquaredDiv1_fifo_cap;
input   sigmaSquaredDiv1_empty_n;
output   sigmaSquaredDiv1_read;
input  [1:0] last3_dout;
input  [4:0] last3_num_data_valid;
input  [4:0] last3_fifo_cap;
input   last3_empty_n;
output   last3_read;
output  [383:0] output_r_TDATA;
output   output_r_TVALID;
input   output_r_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg resultStream_read;
reg x2_read;
reg y2_read;
reg sigmaSquaredDiv1_read;
reg last3_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [86:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [11:0] n;
reg    resultStream_blk_n;
wire    ap_CS_fsm_state87;
reg   [0:0] tmp_reg_527;
reg   [0:0] icmp_ln186_reg_582;
wire   [0:0] tmp_s_nbreadreq_fu_191_p3;
reg    x2_blk_n;
wire    ap_CS_fsm_state2;
reg    y2_blk_n;
reg    sigmaSquaredDiv1_blk_n;
reg    last3_blk_n;
reg    output_r_TDATA_blk_n;
wire    ap_CS_fsm_state86;
wire   [0:0] grp_nbreadreq_fu_152_p3;
reg    ap_block_state1;
reg   [11:0] y2_read_reg_567;
reg    ap_block_state2;
reg   [11:0] x2_read_reg_572;
reg  signed [63:0] sigmaSquaredDiv1_read_reg_577;
wire   [0:0] icmp_ln186_fu_293_p2;
wire    ap_CS_fsm_state3;
wire   [95:0] grp_fu_209_p2;
reg   [95:0] mul_ln181_reg_599;
wire    ap_CS_fsm_state7;
reg  signed [63:0] trunc_ln_reg_607;
wire    ap_CS_fsm_state8;
wire  signed [127:0] sext_ln182_fu_362_p1;
reg  signed [127:0] sext_ln182_reg_612;
wire    ap_CS_fsm_state9;
wire  signed [127:0] grp_fu_213_p2;
reg  signed [127:0] mul_ln182_reg_623;
wire    ap_CS_fsm_state13;
reg   [63:0] trunc_ln3_reg_628;
wire    ap_CS_fsm_state18;
wire  signed [11:0] r_n_fu_380_p2;
reg  signed [11:0] r_n_reg_633;
wire    ap_CS_fsm_state19;
wire   [319:0] tmp_3_fu_445_p4;
reg    ap_predicate_op230_write_state87;
reg    ap_predicate_op233_read_state87;
wire    regslice_both_output_r_U_apdone_blk;
reg    ap_block_state87;
reg    ap_block_state87_io;
reg   [11:0] grp_load_fu_221_p1;
reg   [11:0] r_n_1_fu_126;
reg   [11:0] ap_sig_allocacmp_r_n_1_load_1;
reg   [63:0] r_a_1_fu_130;
reg  signed [63:0] r_b_1_fu_134;
reg   [63:0] r_sigmaA_1_fu_138;
reg   [63:0] r_sigmaB_1_fu_142;
wire  signed [63:0] grp_fu_217_p1;
wire    ap_CS_fsm_state14;
wire  signed [43:0] shl_ln181_1_fu_302_p3;
wire   [43:0] shl_ln_fu_322_p3;
wire  signed [63:0] sext_ln181_fu_329_p1;
wire   [63:0] sub_ln181_fu_333_p2;
wire   [95:0] shl_ln181_2_fu_339_p3;
wire   [95:0] sub_ln181_1_fu_347_p2;
wire   [127:0] grp_fu_217_p2;
wire  signed [12:0] sext_ln188_fu_391_p1;
wire  signed [12:0] add_ln188_fu_394_p2;
wire   [63:0] grp_fu_404_p2;
wire  signed [63:0] or_ln190_4_fu_415_p4;
wire   [255:0] tmp_5_fu_435_p4;
wire   [11:0] trunc_ln196_fu_431_p1;
reg    grp_fu_404_ce;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
reg   [86:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
reg    ap_ST_fsm_state86_blk;
reg    ap_ST_fsm_state87_blk;
wire   [383:0] output_r_TDATA_int_regslice;
reg    output_r_TVALID_int_regslice;
wire    output_r_TREADY_int_regslice;
wire    regslice_both_output_r_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 87'd1;
#0 n = 12'd0;
end

fit_mul_64s_44s_96_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 44 ),
    .dout_WIDTH( 96 ))
mul_64s_44s_96_5_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(r_b_1_fu_134),
    .din1(shl_ln181_1_fu_302_p3),
    .ce(1'b1),
    .dout(grp_fu_209_p2)
);

fit_mul_64s_64s_128_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 128 ))
mul_64s_64s_128_5_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln_reg_607),
    .din1(sigmaSquaredDiv1_read_reg_577),
    .ce(1'b1),
    .dout(grp_fu_213_p2)
);

fit_mul_128s_64s_128_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 128 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 128 ))
mul_128s_64s_128_5_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln182_reg_623),
    .din1(grp_fu_217_p1),
    .ce(1'b1),
    .dout(grp_fu_217_p2)
);

fit_sdiv_64ns_13s_64_68_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 64 ))
sdiv_64ns_13s_64_68_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln3_reg_628),
    .din1(add_ln188_fu_394_p2),
    .ce(grp_fu_404_ce),
    .dout(grp_fu_404_p2)
);

fit_regslice_both #(
    .DataWidth( 384 ))
regslice_both_output_r_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(output_r_TDATA_int_regslice),
    .vld_in(output_r_TVALID_int_regslice),
    .ack_in(output_r_TREADY_int_regslice),
    .data_out(output_r_TDATA),
    .vld_out(regslice_both_output_r_U_vld_out),
    .ack_out(output_r_TREADY),
    .apdone_blk(regslice_both_output_r_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((regslice_both_output_r_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state87_io) | ((ap_predicate_op233_read_state87 == 1'b1) & (resultStream_empty_n == 1'b0)) | ((ap_predicate_op230_write_state87 == 1'b1) & (output_r_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_fsm_state87) & ((grp_nbreadreq_fu_152_p3 == 1'd0) | (tmp_reg_527 == 1'd0)))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (resultStream_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (grp_nbreadreq_fu_152_p3 == 1'd1))) begin
        r_a_1_fu_130 <= {{resultStream_dout[75:12]}};
    end else if ((~((regslice_both_output_r_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state87_io) | ((ap_predicate_op233_read_state87 == 1'b1) & (resultStream_empty_n == 1'b0)) | ((ap_predicate_op230_write_state87 == 1'b1) & (output_r_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_fsm_state87) & (icmp_ln186_reg_582 == 1'd0) & (tmp_reg_527 == 1'd1))) begin
        r_a_1_fu_130 <= {{tmp_3_fu_445_p4[127:64]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (resultStream_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (grp_nbreadreq_fu_152_p3 == 1'd1))) begin
        r_b_1_fu_134 <= {{resultStream_dout[139:76]}};
    end else if ((~((regslice_both_output_r_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state87_io) | ((ap_predicate_op233_read_state87 == 1'b1) & (resultStream_empty_n == 1'b0)) | ((ap_predicate_op230_write_state87 == 1'b1) & (output_r_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_fsm_state87) & (icmp_ln186_reg_582 == 1'd0) & (tmp_reg_527 == 1'd1))) begin
        r_b_1_fu_134 <= {{tmp_3_fu_445_p4[191:128]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (resultStream_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (grp_nbreadreq_fu_152_p3 == 1'd1))) begin
        r_n_1_fu_126 <= n;
    end else if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln186_reg_582 == 1'd1))) begin
        r_n_1_fu_126 <= r_n_fu_380_p2;
    end else if ((~((regslice_both_output_r_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state87_io) | ((ap_predicate_op233_read_state87 == 1'b1) & (resultStream_empty_n == 1'b0)) | ((ap_predicate_op230_write_state87 == 1'b1) & (output_r_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_fsm_state87) & (icmp_ln186_reg_582 == 1'd0) & (tmp_reg_527 == 1'd1))) begin
        r_n_1_fu_126 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (resultStream_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (grp_nbreadreq_fu_152_p3 == 1'd1))) begin
        r_sigmaA_1_fu_138 <= {{resultStream_dout[203:140]}};
    end else if ((~((regslice_both_output_r_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state87_io) | ((ap_predicate_op233_read_state87 == 1'b1) & (resultStream_empty_n == 1'b0)) | ((ap_predicate_op230_write_state87 == 1'b1) & (output_r_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_fsm_state87) & (icmp_ln186_reg_582 == 1'd0) & (tmp_reg_527 == 1'd1))) begin
        r_sigmaA_1_fu_138 <= {{tmp_3_fu_445_p4[255:192]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (resultStream_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (grp_nbreadreq_fu_152_p3 == 1'd1))) begin
        r_sigmaB_1_fu_142 <= {{resultStream_dout[267:204]}};
    end else if ((~((regslice_both_output_r_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state87_io) | ((ap_predicate_op233_read_state87 == 1'b1) & (resultStream_empty_n == 1'b0)) | ((ap_predicate_op230_write_state87 == 1'b1) & (output_r_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_fsm_state87) & (icmp_ln186_reg_582 == 1'd0) & (tmp_reg_527 == 1'd1))) begin
        r_sigmaB_1_fu_142 <= {{tmp_3_fu_445_p4[319:256]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((last3_empty_n == 1'b0) | (sigmaSquaredDiv1_empty_n == 1'b0) | (y2_empty_n == 1'b0) | (x2_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln186_reg_582 <= icmp_ln186_fu_293_p2;
        sigmaSquaredDiv1_read_reg_577 <= sigmaSquaredDiv1_dout;
        x2_read_reg_572 <= x2_dout;
        y2_read_reg_567 <= y2_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        mul_ln181_reg_599 <= grp_fu_209_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        mul_ln182_reg_623 <= grp_fu_213_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((regslice_both_output_r_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state87_io) | ((ap_predicate_op233_read_state87 == 1'b1) & (resultStream_empty_n == 1'b0)) | ((ap_predicate_op230_write_state87 == 1'b1) & (output_r_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_fsm_state87) & (grp_nbreadreq_fu_152_p3 == 1'd0) & (tmp_reg_527 == 1'd1))) begin
        n <= grp_load_fu_221_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        r_n_reg_633 <= r_n_fu_380_p2;
        trunc_ln3_reg_628 <= {{grp_fu_217_p2[127:64]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sext_ln182_reg_612 <= sext_ln182_fu_362_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (resultStream_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_reg_527 <= grp_nbreadreq_fu_152_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        trunc_ln_reg_607 <= {{sub_ln181_1_fu_347_p2[95:32]}};
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (resultStream_empty_n == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if (((last3_empty_n == 1'b0) | (sigmaSquaredDiv1_empty_n == 1'b0) | (y2_empty_n == 1'b0) | (x2_empty_n == 1'b0))) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

always @ (*) begin
    if ((output_r_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state86_blk = 1'b1;
    end else begin
        ap_ST_fsm_state86_blk = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_output_r_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state87_io) | ((ap_predicate_op233_read_state87 == 1'b1) & (resultStream_empty_n == 1'b0)) | ((ap_predicate_op230_write_state87 == 1'b1) & (output_r_TREADY_int_regslice == 1'b0)))) begin
        ap_ST_fsm_state87_blk = 1'b1;
    end else begin
        ap_ST_fsm_state87_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((~((regslice_both_output_r_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state87_io) | ((ap_predicate_op233_read_state87 == 1'b1) & (resultStream_empty_n == 1'b0)) | ((ap_predicate_op230_write_state87 == 1'b1) & (output_r_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_fsm_state87) & ((grp_nbreadreq_fu_152_p3 == 1'd0) | (tmp_reg_527 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((regslice_both_output_r_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state87_io) | ((ap_predicate_op233_read_state87 == 1'b1) & (resultStream_empty_n == 1'b0)) | ((ap_predicate_op230_write_state87 == 1'b1) & (output_r_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_fsm_state87) & ((grp_nbreadreq_fu_152_p3 == 1'd0) | (tmp_reg_527 == 1'd0)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state87) & (icmp_ln186_reg_582 == 1'd0) & (tmp_reg_527 == 1'd1))) begin
        ap_sig_allocacmp_r_n_1_load_1 = 12'd0;
    end else begin
        ap_sig_allocacmp_r_n_1_load_1 = r_n_1_fu_126;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state1) | ((1'b1 == ap_CS_fsm_state86) & (output_r_TREADY_int_regslice == 1'b0)))) begin
        grp_fu_404_ce = 1'b0;
    end else begin
        grp_fu_404_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state87) & (grp_nbreadreq_fu_152_p3 == 1'd0) & (tmp_reg_527 == 1'd1))) begin
        grp_load_fu_221_p1 = ap_sig_allocacmp_r_n_1_load_1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_load_fu_221_p1 = r_n_1_fu_126;
    end else begin
        grp_load_fu_221_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        last3_blk_n = last3_empty_n;
    end else begin
        last3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((last3_empty_n == 1'b0) | (sigmaSquaredDiv1_empty_n == 1'b0) | (y2_empty_n == 1'b0) | (x2_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        last3_read = 1'b1;
    end else begin
        last3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | ((1'b1 == ap_CS_fsm_state87) & (icmp_ln186_reg_582 == 1'd0) & (tmp_reg_527 == 1'd1)))) begin
        output_r_TDATA_blk_n = output_r_TREADY_int_regslice;
    end else begin
        output_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) & (output_r_TREADY_int_regslice == 1'b1))) begin
        output_r_TVALID_int_regslice = 1'b1;
    end else begin
        output_r_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state87) & (tmp_s_nbreadreq_fu_191_p3 == 1'd1) & (icmp_ln186_reg_582 == 1'd0) & (tmp_reg_527 == 1'd1)) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        resultStream_blk_n = resultStream_empty_n;
    end else begin
        resultStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (resultStream_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | (~((regslice_both_output_r_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state87_io) | ((ap_predicate_op233_read_state87 == 1'b1) & (resultStream_empty_n == 1'b0)) | ((ap_predicate_op230_write_state87 == 1'b1) & (output_r_TREADY_int_regslice == 1'b0))) & (ap_predicate_op233_read_state87 == 1'b1) & (1'b1 == ap_CS_fsm_state87)))) begin
        resultStream_read = 1'b1;
    end else begin
        resultStream_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sigmaSquaredDiv1_blk_n = sigmaSquaredDiv1_empty_n;
    end else begin
        sigmaSquaredDiv1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((last3_empty_n == 1'b0) | (sigmaSquaredDiv1_empty_n == 1'b0) | (y2_empty_n == 1'b0) | (x2_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        sigmaSquaredDiv1_read = 1'b1;
    end else begin
        sigmaSquaredDiv1_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        x2_blk_n = x2_empty_n;
    end else begin
        x2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((last3_empty_n == 1'b0) | (sigmaSquaredDiv1_empty_n == 1'b0) | (y2_empty_n == 1'b0) | (x2_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        x2_read = 1'b1;
    end else begin
        x2_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        y2_blk_n = y2_empty_n;
    end else begin
        y2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((last3_empty_n == 1'b0) | (sigmaSquaredDiv1_empty_n == 1'b0) | (y2_empty_n == 1'b0) | (x2_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        y2_read = 1'b1;
    end else begin
        y2_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (resultStream_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (grp_nbreadreq_fu_152_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (resultStream_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1) & (grp_nbreadreq_fu_152_p3 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((last3_empty_n == 1'b0) | (sigmaSquaredDiv1_empty_n == 1'b0) | (y2_empty_n == 1'b0) | (x2_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln186_reg_582 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            if (((1'b1 == ap_CS_fsm_state86) & (output_r_TREADY_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end
        end
        ap_ST_fsm_state87 : begin
            if ((~((regslice_both_output_r_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state87_io) | ((ap_predicate_op233_read_state87 == 1'b1) & (resultStream_empty_n == 1'b0)) | ((ap_predicate_op230_write_state87 == 1'b1) & (output_r_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_fsm_state87) & ((grp_nbreadreq_fu_152_p3 == 1'd0) | (tmp_reg_527 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((regslice_both_output_r_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state87_io) | ((ap_predicate_op233_read_state87 == 1'b1) & (resultStream_empty_n == 1'b0)) | ((ap_predicate_op230_write_state87 == 1'b1) & (output_r_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_fsm_state87) & (grp_nbreadreq_fu_152_p3 == 1'd1) & (tmp_reg_527 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln188_fu_394_p2 = ($signed(sext_ln188_fu_391_p1) + $signed(13'd8190));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (resultStream_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state2 = ((last3_empty_n == 1'b0) | (sigmaSquaredDiv1_empty_n == 1'b0) | (y2_empty_n == 1'b0) | (x2_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state87 = ((regslice_both_output_r_U_apdone_blk == 1'b1) | ((ap_predicate_op233_read_state87 == 1'b1) & (resultStream_empty_n == 1'b0)) | ((ap_predicate_op230_write_state87 == 1'b1) & (output_r_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state87_io = ((ap_predicate_op230_write_state87 == 1'b1) & (output_r_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_predicate_op230_write_state87 = ((icmp_ln186_reg_582 == 1'd0) & (tmp_reg_527 == 1'd1));
end

always @ (*) begin
    ap_predicate_op233_read_state87 = ((tmp_s_nbreadreq_fu_191_p3 == 1'd1) & (icmp_ln186_reg_582 == 1'd0) & (tmp_reg_527 == 1'd1));
end

assign grp_fu_217_p1 = sext_ln182_reg_612;

assign grp_nbreadreq_fu_152_p3 = last3_empty_n;

assign icmp_ln186_fu_293_p2 = ((last3_dout == 2'd0) ? 1'b1 : 1'b0);

assign or_ln190_4_fu_415_p4 = r_b_1_fu_134;

assign output_r_TDATA_int_regslice = {{{{{{{grp_fu_404_p2}, {r_sigmaB_1_fu_142}}, {r_sigmaA_1_fu_138}}, {or_ln190_4_fu_415_p4}}, {r_a_1_fu_130}}, {52'd0}}, {r_n_reg_633}};

assign output_r_TVALID = regslice_both_output_r_U_vld_out;

assign r_n_fu_380_p2 = (grp_load_fu_221_p1 + 12'd1);

assign sext_ln181_fu_329_p1 = $signed(shl_ln_fu_322_p3);

assign sext_ln182_fu_362_p1 = trunc_ln_reg_607;

assign sext_ln188_fu_391_p1 = r_n_reg_633;

assign shl_ln181_1_fu_302_p3 = {{x2_read_reg_572}, {32'd0}};

assign shl_ln181_2_fu_339_p3 = {{sub_ln181_fu_333_p2}, {32'd0}};

assign shl_ln_fu_322_p3 = {{y2_read_reg_567}, {32'd0}};

assign sub_ln181_1_fu_347_p2 = (shl_ln181_2_fu_339_p3 - mul_ln181_reg_599);

assign sub_ln181_fu_333_p2 = ($signed(sext_ln181_fu_329_p1) - $signed(r_a_1_fu_130));

assign tmp_3_fu_445_p4 = {{{tmp_5_fu_435_p4}, {52'd0}}, {trunc_ln196_fu_431_p1}};

assign tmp_5_fu_435_p4 = {{resultStream_dout[267:12]}};

assign tmp_s_nbreadreq_fu_191_p3 = resultStream_empty_n;

assign trunc_ln196_fu_431_p1 = resultStream_dout[11:0];

endmodule //fit_finalStage
