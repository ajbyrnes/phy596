// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fit_interStage2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        x1_dout,
        x1_num_data_valid,
        x1_fifo_cap,
        x1_empty_n,
        x1_read,
        y1_dout,
        y1_num_data_valid,
        y1_fifo_cap,
        y1_empty_n,
        y1_read,
        sigmaDiv1_dout,
        sigmaDiv1_num_data_valid,
        sigmaDiv1_fifo_cap,
        sigmaDiv1_empty_n,
        sigmaDiv1_read,
        SDiv1_dout,
        SDiv1_num_data_valid,
        SDiv1_fifo_cap,
        SDiv1_empty_n,
        SDiv1_read,
        SxDivS_dout,
        SxDivS_num_data_valid,
        SxDivS_fifo_cap,
        SxDivS_empty_n,
        SxDivS_read,
        SxSquaredDivS_dout,
        SxSquaredDivS_num_data_valid,
        SxSquaredDivS_fifo_cap,
        SxSquaredDivS_empty_n,
        SxSquaredDivS_read,
        SyDivS_dout,
        SyDivS_num_data_valid,
        SyDivS_fifo_cap,
        SyDivS_empty_n,
        SyDivS_read,
        last2_dout,
        last2_num_data_valid,
        last2_fifo_cap,
        last2_empty_n,
        last2_read,
        resultStream_din,
        resultStream_num_data_valid,
        resultStream_fifo_cap,
        resultStream_full_n,
        resultStream_write
);

parameter    ap_ST_fsm_state1 = 98'd1;
parameter    ap_ST_fsm_state2 = 98'd2;
parameter    ap_ST_fsm_state3 = 98'd4;
parameter    ap_ST_fsm_state4 = 98'd8;
parameter    ap_ST_fsm_state5 = 98'd16;
parameter    ap_ST_fsm_state6 = 98'd32;
parameter    ap_ST_fsm_state7 = 98'd64;
parameter    ap_ST_fsm_state8 = 98'd128;
parameter    ap_ST_fsm_state9 = 98'd256;
parameter    ap_ST_fsm_state10 = 98'd512;
parameter    ap_ST_fsm_state11 = 98'd1024;
parameter    ap_ST_fsm_state12 = 98'd2048;
parameter    ap_ST_fsm_state13 = 98'd4096;
parameter    ap_ST_fsm_state14 = 98'd8192;
parameter    ap_ST_fsm_state15 = 98'd16384;
parameter    ap_ST_fsm_state16 = 98'd32768;
parameter    ap_ST_fsm_state17 = 98'd65536;
parameter    ap_ST_fsm_state18 = 98'd131072;
parameter    ap_ST_fsm_state19 = 98'd262144;
parameter    ap_ST_fsm_state20 = 98'd524288;
parameter    ap_ST_fsm_state21 = 98'd1048576;
parameter    ap_ST_fsm_state22 = 98'd2097152;
parameter    ap_ST_fsm_state23 = 98'd4194304;
parameter    ap_ST_fsm_state24 = 98'd8388608;
parameter    ap_ST_fsm_state25 = 98'd16777216;
parameter    ap_ST_fsm_state26 = 98'd33554432;
parameter    ap_ST_fsm_state27 = 98'd67108864;
parameter    ap_ST_fsm_state28 = 98'd134217728;
parameter    ap_ST_fsm_state29 = 98'd268435456;
parameter    ap_ST_fsm_state30 = 98'd536870912;
parameter    ap_ST_fsm_state31 = 98'd1073741824;
parameter    ap_ST_fsm_state32 = 98'd2147483648;
parameter    ap_ST_fsm_state33 = 98'd4294967296;
parameter    ap_ST_fsm_state34 = 98'd8589934592;
parameter    ap_ST_fsm_state35 = 98'd17179869184;
parameter    ap_ST_fsm_state36 = 98'd34359738368;
parameter    ap_ST_fsm_state37 = 98'd68719476736;
parameter    ap_ST_fsm_state38 = 98'd137438953472;
parameter    ap_ST_fsm_state39 = 98'd274877906944;
parameter    ap_ST_fsm_state40 = 98'd549755813888;
parameter    ap_ST_fsm_state41 = 98'd1099511627776;
parameter    ap_ST_fsm_state42 = 98'd2199023255552;
parameter    ap_ST_fsm_state43 = 98'd4398046511104;
parameter    ap_ST_fsm_state44 = 98'd8796093022208;
parameter    ap_ST_fsm_state45 = 98'd17592186044416;
parameter    ap_ST_fsm_state46 = 98'd35184372088832;
parameter    ap_ST_fsm_state47 = 98'd70368744177664;
parameter    ap_ST_fsm_state48 = 98'd140737488355328;
parameter    ap_ST_fsm_state49 = 98'd281474976710656;
parameter    ap_ST_fsm_state50 = 98'd562949953421312;
parameter    ap_ST_fsm_state51 = 98'd1125899906842624;
parameter    ap_ST_fsm_state52 = 98'd2251799813685248;
parameter    ap_ST_fsm_state53 = 98'd4503599627370496;
parameter    ap_ST_fsm_state54 = 98'd9007199254740992;
parameter    ap_ST_fsm_state55 = 98'd18014398509481984;
parameter    ap_ST_fsm_state56 = 98'd36028797018963968;
parameter    ap_ST_fsm_state57 = 98'd72057594037927936;
parameter    ap_ST_fsm_state58 = 98'd144115188075855872;
parameter    ap_ST_fsm_state59 = 98'd288230376151711744;
parameter    ap_ST_fsm_state60 = 98'd576460752303423488;
parameter    ap_ST_fsm_state61 = 98'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 98'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 98'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 98'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 98'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 98'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 98'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 98'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 98'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 98'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 98'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 98'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 98'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 98'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 98'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 98'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 98'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 98'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 98'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 98'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 98'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 98'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 98'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 98'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 98'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 98'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 98'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 98'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 98'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 98'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 98'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 98'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 98'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 98'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 98'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 98'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 98'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 98'd158456325028528675187087900672;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [11:0] x1_dout;
input  [4:0] x1_num_data_valid;
input  [4:0] x1_fifo_cap;
input   x1_empty_n;
output   x1_read;
input  [11:0] y1_dout;
input  [4:0] y1_num_data_valid;
input  [4:0] y1_fifo_cap;
input   y1_empty_n;
output   y1_read;
input  [63:0] sigmaDiv1_dout;
input  [4:0] sigmaDiv1_num_data_valid;
input  [4:0] sigmaDiv1_fifo_cap;
input   sigmaDiv1_empty_n;
output   sigmaDiv1_read;
input  [63:0] SDiv1_dout;
input  [4:0] SDiv1_num_data_valid;
input  [4:0] SDiv1_fifo_cap;
input   SDiv1_empty_n;
output   SDiv1_read;
input  [63:0] SxDivS_dout;
input  [4:0] SxDivS_num_data_valid;
input  [4:0] SxDivS_fifo_cap;
input   SxDivS_empty_n;
output   SxDivS_read;
input  [63:0] SxSquaredDivS_dout;
input  [4:0] SxSquaredDivS_num_data_valid;
input  [4:0] SxSquaredDivS_fifo_cap;
input   SxSquaredDivS_empty_n;
output   SxSquaredDivS_read;
input  [63:0] SyDivS_dout;
input  [4:0] SyDivS_num_data_valid;
input  [4:0] SyDivS_fifo_cap;
input   SyDivS_empty_n;
output   SyDivS_read;
input  [1:0] last2_dout;
input  [4:0] last2_num_data_valid;
input  [4:0] last2_fifo_cap;
input   last2_empty_n;
output   last2_read;
output  [331:0] resultStream_din;
input  [4:0] resultStream_num_data_valid;
input  [4:0] resultStream_fifo_cap;
input   resultStream_full_n;
output   resultStream_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg x1_read;
reg y1_read;
reg sigmaDiv1_read;
reg SDiv1_read;
reg SxDivS_read;
reg SxSquaredDivS_read;
reg SyDivS_read;
reg last2_read;
reg resultStream_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [97:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    x1_blk_n;
wire    ap_CS_fsm_state2;
reg    y1_blk_n;
reg    sigmaDiv1_blk_n;
reg    SDiv1_blk_n;
wire    ap_CS_fsm_state87;
reg    SxDivS_blk_n;
wire    ap_CS_fsm_state98;
reg   [0:0] tmp_reg_448;
reg   [0:0] icmp_ln144_reg_493;
wire   [0:0] tmp_9_nbreadreq_fu_159_p3;
reg    SxSquaredDivS_blk_n;
reg    SyDivS_blk_n;
reg    last2_blk_n;
reg    resultStream_blk_n;
wire   [0:0] grp_nbreadreq_fu_102_p3;
reg    ap_block_state1;
reg  signed [63:0] sigmaDiv1Temp_reg_478;
reg    ap_block_state2;
wire   [64:0] sub_ln140_fu_225_p2;
reg  signed [64:0] sub_ln140_reg_483;
reg  signed [11:0] y1_read_reg_488;
wire   [0:0] icmp_ln144_fu_231_p2;
wire  signed [95:0] sext_ln140_2_fu_237_p1;
reg  signed [95:0] sext_ln140_2_reg_497;
wire    ap_CS_fsm_state3;
reg  signed [63:0] t_reg_508;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire  signed [95:0] sext_ln141_fu_263_p1;
wire    ap_CS_fsm_state12;
wire   [75:0] grp_fu_167_p2;
reg  signed [75:0] mul_ln142_reg_530;
wire    ap_CS_fsm_state13;
wire   [95:0] grp_fu_171_p2;
reg   [95:0] mul_ln141_reg_540;
wire    ap_CS_fsm_state16;
reg  signed [63:0] Stt_2_reg_545;
wire    ap_CS_fsm_state17;
wire   [95:0] grp_fu_183_p2;
reg   [95:0] mul_ln142_1_reg_551;
reg  signed [63:0] bSum_2_reg_556;
wire    ap_CS_fsm_state18;
wire   [63:0] grp_fu_327_p2;
reg   [63:0] sdiv_ln147_reg_566;
reg    ap_block_state87;
reg   [63:0] SyDivS_read_reg_571;
reg  signed [63:0] SDiv1_read_reg_576;
reg  signed [63:0] SxSquaredDivS_read_reg_581;
wire  signed [63:0] r_sigmaB_fu_342_p1;
reg  signed [63:0] r_sigmaB_reg_586;
wire    ap_CS_fsm_state88;
wire  signed [95:0] sext_ln148_fu_345_p1;
wire  signed [95:0] sext_ln148_1_fu_349_p1;
reg  signed [63:0] r_b_reg_611;
wire    ap_CS_fsm_state92;
wire  signed [127:0] grp_fu_175_p2;
reg  signed [127:0] mul_ln150_reg_617;
wire  signed [95:0] sext_ln149_fu_373_p1;
wire    ap_CS_fsm_state93;
wire  signed [95:0] sext_ln149_1_fu_377_p1;
reg   [95:0] mul_ln149_reg_637;
wire    ap_CS_fsm_state97;
reg   [63:0] tmp_2_reg_642;
reg   [63:0] Stt_fu_84;
reg    ap_predicate_op279_write_state98;
reg    ap_predicate_op284_read_state98;
reg    ap_block_state98;
reg   [63:0] bSum_fu_88;
reg   [63:0] SxDivSTemp_1_fu_92;
reg  signed [63:0] grp_fu_171_p0;
reg  signed [63:0] grp_fu_171_p1;
wire  signed [63:0] grp_fu_183_p1;
wire   [43:0] shl_ln_fu_209_p3;
wire  signed [63:0] sext_ln140_1_fu_221_p0;
wire  signed [64:0] sext_ln140_fu_217_p1;
wire  signed [64:0] sext_ln140_1_fu_221_p1;
wire   [95:0] grp_fu_179_p2;
wire   [95:0] shl_ln1_fu_275_p3;
wire   [95:0] add_ln141_fu_283_p2;
wire   [95:0] shl_ln2_fu_301_p3;
wire   [95:0] add_ln142_fu_309_p2;
wire  signed [63:0] sext_ln149_fu_373_p0;
wire   [127:0] grp_fu_187_p2;
wire   [95:0] shl_ln3_fu_395_p3;
wire   [95:0] sub_ln149_fu_402_p2;
wire   [63:0] tmp_1_fu_407_p4;
wire   [267:0] or_ln152_5_fu_417_p6;
reg    grp_fu_327_ce;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state96;
reg   [97:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
reg    ap_ST_fsm_state87_blk;
wire    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
wire    ap_ST_fsm_state97_blk;
reg    ap_ST_fsm_state98_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 98'd1;
end

fit_mul_64s_12s_76_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 76 ))
mul_64s_12s_76_5_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(t_reg_508),
    .din1(y1_read_reg_488),
    .ce(1'b1),
    .dout(grp_fu_167_p2)
);

fit_mul_64s_64s_96_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 96 ))
mul_64s_64s_96_5_1_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_171_p0),
    .din1(grp_fu_171_p1),
    .ce(1'b1),
    .dout(grp_fu_171_p2)
);

fit_mul_64s_64s_128_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 128 ))
mul_64s_64s_128_5_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(SDiv1_read_reg_576),
    .din1(r_sigmaB_fu_342_p1),
    .ce(1'b1),
    .dout(grp_fu_175_p2)
);

fit_mul_65s_64s_96_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 65 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 96 ))
mul_65s_64s_96_5_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln140_reg_483),
    .din1(sigmaDiv1Temp_reg_478),
    .ce(1'b1),
    .dout(grp_fu_179_p2)
);

fit_mul_76s_64s_96_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 76 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 96 ))
mul_76s_64s_96_5_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln142_reg_530),
    .din1(grp_fu_183_p1),
    .ce(1'b1),
    .dout(grp_fu_183_p2)
);

fit_mul_128s_64s_128_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 128 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 128 ))
mul_128s_64s_128_5_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_ln150_reg_617),
    .din1(SxSquaredDivS_read_reg_581),
    .ce(1'b1),
    .dout(grp_fu_187_p2)
);

fit_sdiv_66ns_64s_64_70_1 #(
    .ID( 1 ),
    .NUM_STAGE( 70 ),
    .din0_WIDTH( 66 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
sdiv_66ns_64s_64_70_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(66'd18446744073709551616),
    .din1(Stt_2_reg_545),
    .ce(grp_fu_327_ce),
    .dout(grp_fu_327_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~(((ap_predicate_op284_read_state98 == 1'b1) & (1'b0 == SxDivS_empty_n)) | ((ap_predicate_op279_write_state98 == 1'b1) & (resultStream_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state98) & ((grp_nbreadreq_fu_102_p3 == 1'd0) | (tmp_reg_448 == 1'd0)))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln144_reg_493 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        Stt_fu_84 <= Stt_2_reg_545;
    end else if (((~(((ap_predicate_op284_read_state98 == 1'b1) & (1'b0 == SxDivS_empty_n)) | ((ap_predicate_op279_write_state98 == 1'b1) & (resultStream_full_n == 1'b0))) & (icmp_ln144_reg_493 == 1'd0) & (1'b1 == ap_CS_fsm_state98) & (tmp_reg_448 == 1'd1)) | (~((1'b0 == SxDivS_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (grp_nbreadreq_fu_102_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        Stt_fu_84 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln144_reg_493 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        bSum_fu_88 <= {{add_ln142_fu_309_p2[95:32]}};
    end else if (((~(((ap_predicate_op284_read_state98 == 1'b1) & (1'b0 == SxDivS_empty_n)) | ((ap_predicate_op279_write_state98 == 1'b1) & (resultStream_full_n == 1'b0))) & (icmp_ln144_reg_493 == 1'd0) & (1'b1 == ap_CS_fsm_state98) & (tmp_reg_448 == 1'd1)) | (~((1'b0 == SxDivS_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (grp_nbreadreq_fu_102_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        bSum_fu_88 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == SyDivS_empty_n) | (1'b0 == SxSquaredDivS_empty_n) | (1'b0 == SDiv1_empty_n)) & (1'b1 == ap_CS_fsm_state87))) begin
        SDiv1_read_reg_576 <= SDiv1_dout;
        SxSquaredDivS_read_reg_581 <= SxSquaredDivS_dout;
        SyDivS_read_reg_571 <= SyDivS_dout;
        sdiv_ln147_reg_566 <= grp_fu_327_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        Stt_2_reg_545 <= {{add_ln141_fu_283_p2[95:32]}};
        mul_ln142_1_reg_551 <= grp_fu_183_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~(((ap_predicate_op284_read_state98 == 1'b1) & (1'b0 == SxDivS_empty_n)) | ((ap_predicate_op279_write_state98 == 1'b1) & (resultStream_full_n == 1'b0))) & (tmp_9_nbreadreq_fu_159_p3 == 1'd1) & (icmp_ln144_reg_493 == 1'd0) & (1'b1 == ap_CS_fsm_state98) & (tmp_reg_448 == 1'd1)) | (~((1'b0 == SxDivS_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (grp_nbreadreq_fu_102_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        SxDivSTemp_1_fu_92 <= SxDivS_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        bSum_2_reg_556 <= {{add_ln142_fu_309_p2[95:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((last2_empty_n == 1'b0) | (sigmaDiv1_empty_n == 1'b0) | (y1_empty_n == 1'b0) | (x1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln144_reg_493 <= icmp_ln144_fu_231_p2;
        sigmaDiv1Temp_reg_478 <= sigmaDiv1_dout;
        sub_ln140_reg_483 <= sub_ln140_fu_225_p2;
        y1_read_reg_488 <= y1_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        mul_ln141_reg_540 <= grp_fu_171_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        mul_ln142_reg_530 <= grp_fu_167_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        mul_ln149_reg_637 <= grp_fu_171_p2;
        tmp_2_reg_642 <= {{grp_fu_187_p2[127:64]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        mul_ln150_reg_617 <= grp_fu_175_p2;
        r_b_reg_611 <= {{grp_fu_171_p2[95:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        r_sigmaB_reg_586 <= r_sigmaB_fu_342_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        sext_ln140_2_reg_497 <= sext_ln140_2_fu_237_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        t_reg_508 <= {{grp_fu_179_p2[95:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == SxDivS_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_reg_448 <= grp_nbreadreq_fu_102_p3;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        SDiv1_blk_n = SDiv1_empty_n;
    end else begin
        SDiv1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == SyDivS_empty_n) | (1'b0 == SxSquaredDivS_empty_n) | (1'b0 == SDiv1_empty_n)) & (1'b1 == ap_CS_fsm_state87))) begin
        SDiv1_read = 1'b1;
    end else begin
        SDiv1_read = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_9_nbreadreq_fu_159_p3 == 1'd1) & (icmp_ln144_reg_493 == 1'd0) & (1'b1 == ap_CS_fsm_state98) & (tmp_reg_448 == 1'd1)) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        SxDivS_blk_n = SxDivS_empty_n;
    end else begin
        SxDivS_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op284_read_state98 == 1'b1) & (1'b0 == SxDivS_empty_n)) | ((ap_predicate_op279_write_state98 == 1'b1) & (resultStream_full_n == 1'b0))) & (ap_predicate_op284_read_state98 == 1'b1) & (1'b1 == ap_CS_fsm_state98)) | (~((1'b0 == SxDivS_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        SxDivS_read = 1'b1;
    end else begin
        SxDivS_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        SxSquaredDivS_blk_n = SxSquaredDivS_empty_n;
    end else begin
        SxSquaredDivS_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == SyDivS_empty_n) | (1'b0 == SxSquaredDivS_empty_n) | (1'b0 == SDiv1_empty_n)) & (1'b1 == ap_CS_fsm_state87))) begin
        SxSquaredDivS_read = 1'b1;
    end else begin
        SxSquaredDivS_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        SyDivS_blk_n = SyDivS_empty_n;
    end else begin
        SyDivS_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == SyDivS_empty_n) | (1'b0 == SxSquaredDivS_empty_n) | (1'b0 == SDiv1_empty_n)) & (1'b1 == ap_CS_fsm_state87))) begin
        SyDivS_read = 1'b1;
    end else begin
        SyDivS_read = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((1'b0 == SxDivS_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if (((last2_empty_n == 1'b0) | (sigmaDiv1_empty_n == 1'b0) | (y1_empty_n == 1'b0) | (x1_empty_n == 1'b0))) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

always @ (*) begin
    if (((1'b0 == SyDivS_empty_n) | (1'b0 == SxSquaredDivS_empty_n) | (1'b0 == SDiv1_empty_n))) begin
        ap_ST_fsm_state87_blk = 1'b1;
    end else begin
        ap_ST_fsm_state87_blk = 1'b0;
    end
end

assign ap_ST_fsm_state88_blk = 1'b0;

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state90_blk = 1'b0;

assign ap_ST_fsm_state91_blk = 1'b0;

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

assign ap_ST_fsm_state96_blk = 1'b0;

assign ap_ST_fsm_state97_blk = 1'b0;

always @ (*) begin
    if ((((ap_predicate_op284_read_state98 == 1'b1) & (1'b0 == SxDivS_empty_n)) | ((ap_predicate_op279_write_state98 == 1'b1) & (resultStream_full_n == 1'b0)))) begin
        ap_ST_fsm_state98_blk = 1'b1;
    end else begin
        ap_ST_fsm_state98_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((~(((ap_predicate_op284_read_state98 == 1'b1) & (1'b0 == SxDivS_empty_n)) | ((ap_predicate_op279_write_state98 == 1'b1) & (resultStream_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state98) & ((grp_nbreadreq_fu_102_p3 == 1'd0) | (tmp_reg_448 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op284_read_state98 == 1'b1) & (1'b0 == SxDivS_empty_n)) | ((ap_predicate_op279_write_state98 == 1'b1) & (resultStream_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state98) & ((grp_nbreadreq_fu_102_p3 == 1'd0) | (tmp_reg_448 == 1'd0)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_fu_171_p0 = sext_ln149_1_fu_377_p1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_171_p0 = sext_ln148_1_fu_349_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_171_p0 = sext_ln141_fu_263_p1;
    end else begin
        grp_fu_171_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        grp_fu_171_p1 = sext_ln149_fu_373_p1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        grp_fu_171_p1 = sext_ln148_fu_345_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_171_p1 = sext_ln141_fu_263_p1;
    end else begin
        grp_fu_171_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1) | ((1'b1 == ap_CS_fsm_state87) & ((1'b0 == SyDivS_empty_n) | (1'b0 == SxSquaredDivS_empty_n) | (1'b0 == SDiv1_empty_n))))) begin
        grp_fu_327_ce = 1'b0;
    end else begin
        grp_fu_327_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        last2_blk_n = last2_empty_n;
    end else begin
        last2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((last2_empty_n == 1'b0) | (sigmaDiv1_empty_n == 1'b0) | (y1_empty_n == 1'b0) | (x1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        last2_read = 1'b1;
    end else begin
        last2_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln144_reg_493 == 1'd0) & (1'b1 == ap_CS_fsm_state98) & (tmp_reg_448 == 1'd1))) begin
        resultStream_blk_n = resultStream_full_n;
    end else begin
        resultStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((ap_predicate_op284_read_state98 == 1'b1) & (1'b0 == SxDivS_empty_n)) | ((ap_predicate_op279_write_state98 == 1'b1) & (resultStream_full_n == 1'b0))) & (ap_predicate_op279_write_state98 == 1'b1) & (1'b1 == ap_CS_fsm_state98))) begin
        resultStream_write = 1'b1;
    end else begin
        resultStream_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sigmaDiv1_blk_n = sigmaDiv1_empty_n;
    end else begin
        sigmaDiv1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((last2_empty_n == 1'b0) | (sigmaDiv1_empty_n == 1'b0) | (y1_empty_n == 1'b0) | (x1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        sigmaDiv1_read = 1'b1;
    end else begin
        sigmaDiv1_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        x1_blk_n = x1_empty_n;
    end else begin
        x1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((last2_empty_n == 1'b0) | (sigmaDiv1_empty_n == 1'b0) | (y1_empty_n == 1'b0) | (x1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        x1_read = 1'b1;
    end else begin
        x1_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        y1_blk_n = y1_empty_n;
    end else begin
        y1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((last2_empty_n == 1'b0) | (sigmaDiv1_empty_n == 1'b0) | (y1_empty_n == 1'b0) | (x1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        y1_read = 1'b1;
    end else begin
        y1_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b0 == SxDivS_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (grp_nbreadreq_fu_102_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((1'b0 == SxDivS_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (grp_nbreadreq_fu_102_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((last2_empty_n == 1'b0) | (sigmaDiv1_empty_n == 1'b0) | (y1_empty_n == 1'b0) | (x1_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln144_reg_493 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            if ((~((1'b0 == SyDivS_empty_n) | (1'b0 == SxSquaredDivS_empty_n) | (1'b0 == SDiv1_empty_n)) & (1'b1 == ap_CS_fsm_state87))) begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            if ((~(((ap_predicate_op284_read_state98 == 1'b1) & (1'b0 == SxDivS_empty_n)) | ((ap_predicate_op279_write_state98 == 1'b1) & (resultStream_full_n == 1'b0))) & (1'b1 == ap_CS_fsm_state98) & ((grp_nbreadreq_fu_102_p3 == 1'd0) | (tmp_reg_448 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~(((ap_predicate_op284_read_state98 == 1'b1) & (1'b0 == SxDivS_empty_n)) | ((ap_predicate_op279_write_state98 == 1'b1) & (resultStream_full_n == 1'b0))) & (grp_nbreadreq_fu_102_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state98) & (tmp_reg_448 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln141_fu_283_p2 = (mul_ln141_reg_540 + shl_ln1_fu_275_p3);

assign add_ln142_fu_309_p2 = (mul_ln142_1_reg_551 + shl_ln2_fu_301_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

always @ (*) begin
    ap_block_state1 = ((1'b0 == SxDivS_empty_n) | (ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state2 = ((last2_empty_n == 1'b0) | (sigmaDiv1_empty_n == 1'b0) | (y1_empty_n == 1'b0) | (x1_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state87 = ((1'b0 == SyDivS_empty_n) | (1'b0 == SxSquaredDivS_empty_n) | (1'b0 == SDiv1_empty_n));
end

always @ (*) begin
    ap_block_state98 = (((ap_predicate_op284_read_state98 == 1'b1) & (1'b0 == SxDivS_empty_n)) | ((ap_predicate_op279_write_state98 == 1'b1) & (resultStream_full_n == 1'b0)));
end

always @ (*) begin
    ap_predicate_op279_write_state98 = ((icmp_ln144_reg_493 == 1'd0) & (tmp_reg_448 == 1'd1));
end

always @ (*) begin
    ap_predicate_op284_read_state98 = ((tmp_9_nbreadreq_fu_159_p3 == 1'd1) & (icmp_ln144_reg_493 == 1'd0) & (tmp_reg_448 == 1'd1));
end

assign grp_fu_183_p1 = sext_ln140_2_reg_497;

assign grp_nbreadreq_fu_102_p3 = last2_empty_n;

assign icmp_ln144_fu_231_p2 = ((last2_dout == 2'd0) ? 1'b1 : 1'b0);

assign or_ln152_5_fu_417_p6 = {{{{{r_sigmaB_reg_586}, {tmp_2_reg_642}}, {r_b_reg_611}}, {tmp_1_fu_407_p4}}, {12'd0}};

assign r_sigmaB_fu_342_p1 = sdiv_ln147_reg_566[63:0];

assign resultStream_din = or_ln152_5_fu_417_p6;

assign sext_ln140_1_fu_221_p0 = SxDivSTemp_1_fu_92;

assign sext_ln140_1_fu_221_p1 = sext_ln140_1_fu_221_p0;

assign sext_ln140_2_fu_237_p1 = sigmaDiv1Temp_reg_478;

assign sext_ln140_fu_217_p1 = $signed(shl_ln_fu_209_p3);

assign sext_ln141_fu_263_p1 = t_reg_508;

assign sext_ln148_1_fu_349_p1 = r_sigmaB_fu_342_p1;

assign sext_ln148_fu_345_p1 = bSum_2_reg_556;

assign sext_ln149_1_fu_377_p1 = r_b_reg_611;

assign sext_ln149_fu_373_p0 = SxDivSTemp_1_fu_92;

assign sext_ln149_fu_373_p1 = sext_ln149_fu_373_p0;

assign shl_ln1_fu_275_p3 = {{Stt_fu_84}, {32'd0}};

assign shl_ln2_fu_301_p3 = {{bSum_fu_88}, {32'd0}};

assign shl_ln3_fu_395_p3 = {{SyDivS_read_reg_571}, {32'd0}};

assign shl_ln_fu_209_p3 = {{x1_dout}, {32'd0}};

assign sub_ln140_fu_225_p2 = ($signed(sext_ln140_fu_217_p1) - $signed(sext_ln140_1_fu_221_p1));

assign sub_ln149_fu_402_p2 = (shl_ln3_fu_395_p3 - mul_ln149_reg_637);

assign tmp_1_fu_407_p4 = {{sub_ln149_fu_402_p2[95:32]}};

assign tmp_9_nbreadreq_fu_159_p3 = SxDivS_empty_n;

endmodule //fit_interStage2
